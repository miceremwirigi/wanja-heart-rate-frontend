{"ast":null,"code":"var _jsxFileName = \"/home/mwirigi/wanja-hms/wanja-heart-rate-frontend/src/Components/HeartRateTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeartRateTable() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('https://phr-backend.onrender.com/api/heartmonitorentries').then(response => response.json()).then(data => setData(data.data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const formatDate = dateString => {\n    // Extract the date and time part from the string\n    const dateTimeString = dateString.split(' ')[0] + 'T' + dateString.split(' ')[1];\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZone: 'Africa/Nairobi'\n    };\n    return new Date(dateTimeString).toLocaleString('en-US', options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Heart Rate Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Heart Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Recorded At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.heart_rate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(item.recorded_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(HeartRateTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = HeartRateTable;\nexport default HeartRateTable;\nvar _c;\n$RefreshReg$(_c, \"HeartRateTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HeartRateTable","_s","data","setData","fetch","then","response","json","catch","error","console","formatDate","dateString","dateTimeString","split","options","weekday","year","month","day","hour","minute","second","timeZone","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","heart_rate","recorded_at","id","_c","$RefreshReg$"],"sources":["/home/mwirigi/wanja-hms/wanja-heart-rate-frontend/src/Components/HeartRateTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nfunction HeartRateTable() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('https://phr-backend.onrender.com/api/heartmonitorentries')\n      .then(response => response.json())\n      .then(data => setData(data.data))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  const formatDate = (dateString) => {\n    // Extract the date and time part from the string\n    const dateTimeString = dateString.split(' ')[0] + 'T' + dateString.split(' ')[1];\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZone: 'Africa/Nairobi' };\n    return new Date(dateTimeString).toLocaleString('en-US', options);\n  };\n\n  return (\n    <div className=\"table-container\">\n      <h1>Heart Rate Data</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Heart Rate</th>\n            <th>Recorded At</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(item => (\n            <tr key={item.id}>\n              <td>{item.heart_rate}</td>\n              <td>{formatDate(item.recorded_at)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default HeartRateTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}